kind: pipeline
name: Ofox_builder

clone:
  depth: 1

steps:
  - name: setup and build
    image: archlinux:base-devel
    environment:
      FOX_SYNC: https://gitlab.com/OrangeFox/sync.git
      DT_LINK:
        from_secret: DT_LINK
      TG_CHAT_ID:
        from_secret: CHAT_ID
      TG_TOKEN:
        from_secret: TOKEN
      DEVICE:
        from_secret: DEVICE
      OEM:
        from_secret: OEM

    commands:
      - curl -fsSL "https://repo.archlinuxcn.org/x86_64/glibc-linux4-2.33-4-x86_64.pkg.tar.zst" | bsdtar -C / -xvf -
      - pacman -Syu --needed --noconfirm wget base-devel xmlto inetutils bc cpio python-sphinx python-sphinx_rtd_theme graphviz imagemagick git python2 python zip xxd
      - "export DT_LINK=$DT_LINK"
      - "export TG_CHAT_ID=$TG_CHAT_ID"
      - "export TG_TOKEN=$TG_TOKEN"
      - "export TARGET=bootimage"
      - "export OUTPUT=OrangeFox*.zip"
      - "export SYNC_PATH=$HOME/work"
      - "export USE_CCACHE=1"
      - "export CCACHE_SIZE=50G"
      - "export CCACHE_DIR=$HOME/work/.ccache"
      - "export J_VAL=16"
      - "export DEVICE=$DEVICE"
      - "export OEM=$OEM"
      - "cp scripts/* ."
      - "bash checks.sh && bash sync.sh && bash build.sh && bash upload.sh"
  #    - curl -sL "https://raw.githubusercontent.com/OrangeFoxRecovery/OrangeFox-CI/fox/scripts/checks.sh" | bash
  #    - curl -sL "https://raw.githubusercontent.com/OrangeFoxRecovery/OrangeFox-CI/fox/scripts/sync.sh" | bash
  #    - curl -sL "https://raw.githubusercontent.com/OrangeFoxRecovery/OrangeFox-CI/fox/scripts/build.sh" | bash
      - "export TIMEOUT=43200"
  #    - curl "https://raw.githubusercontent.com/OrangeFoxRecovery/OrangeFox-CI/fox/scripts/upload.sh" | bash
